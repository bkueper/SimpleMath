@startuml

title __SIMPLEMATH's Class Diagram__\n

  namespace com.example.simplemath {
    class com.example.simplemath.CreateUser {
        - button : Button
        - username : EditText
        + isNewUsername()
        # onCreate()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.Evaluation {
        - anotherRound : boolean
        # onCreate()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.GameSelection {
        - countForGroesserKleiner : TextView
        - countForHochzaehlen : TextView
        - countForZahlenEinfuegen : TextView
        - freeGame : Button
        - gameID : int
        - groesserKleiner : ImageButton
        - groesserKleinerMinus : Button
        - groesserKleinerPlus : Button
        - helloUser : TextView
        - highscore : Button
        - highscoreMode : boolean
        - hochzaehlen : ImageButton
        - hochzaehlenMinus : Button
        - hochzaehlenPlus : Button
        - seekBar : SeekBar
        - startButton : Button
        - time : TextView
        - zahlenEinfuegen : ImageButton
        - zahlenEinfuegenMinus : Button
        - zahlenEinfuegenPlus : Button
        + checkAllCounts()
        + checkCount()
        + countMinus()
        + countPlus()
        + onClick()
        + startFreeGame()
        + startHighscoreGame()
        # onCreate()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.GroesserKleiner {
        - cTimer : CountDownTimer
        - confirm : Button
        - correctAnswers : int
        - dX : float
        - dY : float
        - firstRound : boolean
        - highscoreMode : boolean
        - largerSmallerSymbol1 : TextView
        - largerSmallerSymbol2 : TextView
        - largerSmallerSymbol3 : TextView
        - location : int[]
        - minutes : int
        - normalRect : Rect
        - occupiedSpace : Button[]
        - random : Random
        - remainingTasks : int
        - result1 : Button
        - result2 : Button
        - result3 : Button
        - result4 : Button
        - rounds : int
        - score : TextView
        - scoreValue : int
        - solution1 : View
        - solution2 : View
        - solution3 : View
        - solution4 : View
        - sortingTask : TextView
        - sortingType : int
        - startingPositions : float[]
        - taskProgress : TextView
        - time : TextView
        + onTouch()
        + openEvaluation()
        + startFreeplayGame()
        + startHighscoreGame()
        + updateViews()
        + validateResult()
        # onActivityResult()
        # onCreate()
        # onDestroy()
        - isViewInBounds()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.Hochzaehlen {
        - allButtons : ArrayList<Button>
        - cTimer : CountDownTimer
        - confirm : Button
        - correctAnswers : int
        - currentPosition : int
        - firstNumber : int
        - gridLayout : GridLayout
        - highscoreMode : boolean
        - minPosition : int
        - minutes : int
        - random : Random
        - remainingTasks : int
        - rounds : int
        - score : TextView
        - scoreValue : int
        - secondNumber : int
        - spielId : int
        - taskProgress : TextView
        - taskText : TextView
        - time : TextView
        + addButton()
        {static} + convertDpToPixel()
        + correctAnswer()
        + onClick()
        + openEvaluation()
        + startFreeGame()
        + startHighscoreGame()
        + taskAsString()
        + updateViews()
        + validate()
        + wrongAnswer()
        # onActivityResult()
        # onCreate()
        # onDestroy()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.MainActivity {
        - multiplayer : Button
        - singleplayer : Button
        + openGameSelection()
        # onCreate()
        - openMultiplayer()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.Multiplayer {
        - cTimer : CountDownTimer
        - countdownPlayer1 : TextView
        - countdownPlayer2 : TextView
        - missingPart : int
        - missingPartIndex : int
        - player1Ready : boolean
        - player2Ready : boolean
        - random : Random
        - result1Player1 : Button
        - result1Player2 : Button
        - result2Player1 : Button
        - result2Player2 : Button
        - result3Player1 : Button
        - result3Player2 : Button
        - result4Player1 : Button
        - result4Player2 : Button
        - resultRightOrWrongPlayer1 : TextView
        - resultRightOrWrongPlayer2 : TextView
        - scorePlayer1 : TextView
        - scorePlayer2 : TextView
        - scoreValuePlayer1 : int
        - scoreValuePlayer2 : int
        - startPlayer1 : Button
        - startPlayer2 : Button
        - taskPlayer1 : TextView
        - taskPlayer2 : TextView
        - timeLeftPlayer1 : TextView
        - timeLeftPlayer2 : TextView
        + calculateTask()
        + changeResultButtonVisibility()
        + correctButton()
        + generateTask()
        + isInArray()
        + mathSymbolFromNumber()
        + onClick()
        + startGame()
        + taskAsString()
        + updateViews()
        + validateButton()
        + wrongButton()
        # onCreate()
        # onDestroy()
        - startCountdown()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.UserSelection {
        - buttonsInLinear : ArrayList<Button>
        - deleteUsername : Button
        - editButton : Button
        - editUsername : String
        - enterUsername : EditText
        - imageButton : ImageButton
        - linearLayoutUsers : LinearLayout
        - setNewUserName : Button
        + addUser()
        + closeEditUsernameMenu()
        {static} + convertDpToPixel()
        + isNewUsername()
        + openCreateUser()
        + openEditUsernameMenu()
        + openGameSelection()
        + removeName()
        + replaceName()
        + setCustomOnclick()
        # onActivityResult()
        # onCreate()
    }
  }
  

  namespace com.example.simplemath {
    class com.example.simplemath.ZahlenEinfuegen {
        - cTimer : CountDownTimer
        - correctAnswers : int
        - dontKnow : Button
        - gameID : int
        - highscoreMode : boolean
        - minutes : int
        - missingPart : int
        - missingPartIndex : int
        - random : Random
        - remainingTasks : int
        - result1 : Button
        - result2 : Button
        - result3 : Button
        - result4 : Button
        - resultCorrectOrWrong : TextView
        - rounds : int
        - score : TextView
        - scoreValue : int
        - taskProgress : TextView
        - taskText : TextView
        - time : TextView
        + calculateResult()
        + correctButton()
        + generateTask()
        + isInArray()
        + mathSymbolFromNumber()
        + onClick()
        + openEvaluation()
        + startFreeGame()
        + startHighscoreGame()
        + taskAsString()
        + updateViews()
        + validateButton()
        + wrongButton()
        # onActivityResult()
        # onCreate()
        # onDestroy()
    }
  }
  

  com.example.simplemath.CreateUser -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.Evaluation -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.GameSelection .up.|> android.view.View.OnClickListener
  com.example.simplemath.GameSelection -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.GroesserKleiner .up.|> android.view.View.OnTouchListener
  com.example.simplemath.GroesserKleiner -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.Hochzaehlen .up.|> android.view.View.OnClickListener
  com.example.simplemath.Hochzaehlen -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.MainActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.Multiplayer .up.|> android.view.View.OnClickListener
  com.example.simplemath.Multiplayer -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.UserSelection -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.simplemath.ZahlenEinfuegen .up.|> android.view.View.OnClickListener
  com.example.simplemath.ZahlenEinfuegen -up-|> androidx.appcompat.app.AppCompatActivity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
